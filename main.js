(()=>{"use strict";const t=()=>{let t=document.querySelector("#content");for(;t.firstChild;)t.removeChild(t.firstChild)},e=()=>{let t=document.querySelector("#bodyTitle");for(;t.firstChild;)t.removeChild(t.firstChild)},o=t=>{e();const o=document.querySelector("#bodyTitle"),n=document.createElement("div");n.classList.add("title1");const i=document.createElement("div");i.classList.add("title2"),i.textContent="Due Date",""==t||null==t?(n.textContent="Default",o.appendChild(n)):(n.textContent=t,o.appendChild(n)),o.appendChild(i)};function n(t){let e=document.querySelector("#content");t.forEach((function(o,n,i){let d=document.createElement("div");d.setAttribute("id",`toDoDiv${n}`),d.classList.add("toDoDiv");let l=document.createElement("div");l.classList.add("titleDiv");let r=document.createElement("div");r.setAttribute("id","descDiv"),r.classList.add("invisibleDesc");let c=document.createElement("div");c.classList.add("dueDiv");let s=document.createElement("div");"high"==o.priority?s.classList.add("highPriority"):"medium"==o.priority?s.classList.add("mediumPriority"):s.classList.add("lowPriority");let a=document.createElement("input");a.type="checkbox",a.addEventListener("click",(function(){o.toggle()}));let u=1;l.addEventListener("click",(function(){u%2!=0?(r.classList.remove("invisibleDesc"),r.contentEditable=!0,u+=1):(r.classList.add("invisibleDesc"),u+=1)}));let p=((t,e)=>{let o=document.createElement("div");return o.classList.add("removeBtn"),o.textContent="X",o.addEventListener("click",(function(){t.splice(e,1),document.getElementById(`toDoDiv${e}`).remove()})),o})(t,n);l.textContent=o.title,r.textContent=o.description,c.textContent=o.dueDate,d.appendChild(s),d.appendChild(a),d.appendChild(l),d.appendChild(r),d.appendChild(c),d.appendChild(p),e.appendChild(d)}))}function i(t,e){return e.push(t),e}const d=(()=>{const d={defaultProj:[]};return o(),(i=>{const d=document.createElement("div");d.classList.add("newProj"),d.textContent="Default";const l=document.querySelector("#projectList");d.addEventListener("click",(function(){t(),n(i.defaultProj),e(),o()})),l.appendChild(d)})(d),(e=>{document.querySelector("#createToDoBtn").addEventListener("click",(function(){(e=>{const d=(()=>{let t=window.prompt("Enter title of ToDo:"),e=window.prompt("Enter description of ToDo:"),o=window.prompt("Enter due date of ToDo:"),n=window.prompt("Enter priority of ToDo(High, Medium, or Low):");n=n.toLowerCase();let i=window.prompt("Enter the project you want this ToDo in:");if(i=i.toLowerCase(),""!=t&&null!=t&&""!=e&&null!=e&&""!=o&&null!=o&&""!=n&&null!=n){const d=((t,e,o,n,i,d=!1)=>{let l={title:t,description:e,dueDate:o,priority:n,location:i,isComplete:d};return{get title(){return l.title},get description(){return l.description},get dueDate(){return l.dueDate},get priority(){return l.priority},get location(){return l.location},get isComplete(){return l.isComplete},toggle(){l.isComplete=!l.isComplete}}})(t,e,o,n,i);return d}})();"default"==d.location||""==d.location||null==d.location?(i(d,e.defaultProj),t(),n(e.defaultProj),o("Default")):(i(d,e[d.location]),t(),n(e[d.location]),o(d.location))})(e)}))})(d),document.querySelector("#createProjectBtn").addEventListener("click",(function(){(i=>{const d=document.querySelector("#projectList"),l=document.createElement("div");l.classList.add("newProj");const r=window.prompt("Enter name of project:");let c=r.toLowerCase();l.textContent=r,i[c]=[],l.addEventListener("click",(function(d){t(),n(i[c]),e(),o(r)})),d.appendChild(l)})(d)})),{toDoList:d}})();console.log("project a: "+d.toDoList.defaultProj)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,